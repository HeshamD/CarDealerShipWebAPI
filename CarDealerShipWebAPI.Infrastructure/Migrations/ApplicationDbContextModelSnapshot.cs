// <auto-generated />
using CarDealerShipWebAPI.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarDealerShipWebAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarDealerShipWebAPI.Infrastructure.Entities.VehicleCategoryEntity", b =>
                {
                    b.Property<int>("VehicleCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleCategoryId"), 1L, 1);

                    b.Property<string>("VehicleCategoryName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("VehicleCategoryId");

                    b.ToTable("VehicleCategory");

                    b.HasData(
                        new
                        {
                            VehicleCategoryId = 1,
                            VehicleCategoryName = "Cars"
                        });
                });

            modelBuilder.Entity("CarDealerShipWebAPI.Infrastructure.Entities.VehicleEntity", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvaliable")
                        .HasColumnType("bit");

                    b.Property<int>("Vehicle_Category_id")
                        .HasColumnType("int");

                    b.Property<string>("Vehicle_Cylinders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Doors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Exterior_Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Make")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Vehicle_Mileage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Model")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Vehicle_Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Trim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_VinNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Vehicle_Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("Vehicle_Category_id");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            Condition = "good",
                            IsAvaliable = true,
                            Vehicle_Category_id = 1,
                            Vehicle_Cylinders = "4",
                            Vehicle_Description = "nice car",
                            Vehicle_Doors = "4",
                            Vehicle_Exterior_Color = "black",
                            Vehicle_FuelType = "gas",
                            Vehicle_Make = "hunda",
                            Vehicle_Mileage = "1200",
                            Vehicle_Model = "HR-v",
                            Vehicle_Price = "20000",
                            Vehicle_Trim = "4",
                            Vehicle_VinNumber = "1212313",
                            Vehicle_Year = "2022"
                        });
                });

            modelBuilder.Entity("CarDealerShipWebAPI.Infrastructure.Entities.VehicleEntity", b =>
                {
                    b.HasOne("CarDealerShipWebAPI.Infrastructure.Entities.VehicleCategoryEntity", "VehicleCategoryEntity")
                        .WithMany("Vehicles")
                        .HasForeignKey("Vehicle_Category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleCategoryEntity");
                });

            modelBuilder.Entity("CarDealerShipWebAPI.Infrastructure.Entities.VehicleCategoryEntity", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
